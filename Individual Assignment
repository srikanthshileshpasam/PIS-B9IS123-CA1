import random
import string
import pandas

num_lst = []
name_lst = []
course_lst = []
raw_data = []

exit = False
count = 0



class RandomData:
    '''
    
    '''
    
    def __init__(self, max_students):
        self.max_students = max_students
        
    def generator(self):
        name_dir = ('Nami', 'Yuumi', 'Pyke', 'Soraka')
        course_dir_1 = ('EE', 'IT', 'CS', 'ME', 'CV')
        course_dir_2 = string.digits
        
        for i in range(0,self.max_students):
            num_lst.append(random.randint(1,99999999))
            name_lst.append(random.choice(name_dir))
            course_lst.append(random.choice(course_dir_1) + random.choice(course_dir_2)*5)
            raw_data.append([num_lst[i], name_lst[i], course_lst[i]])
        
        return raw_data
    
    
    
class CreateTable:
    '''
    
    '''
    
    def __init__(self, raw_data):
        self.raw_data = raw_data
        
    def tabulate(self):
        
        data_frame = pandas.DataFrame(self.raw_data, columns = ['Number', 'Name', 'Course'])
        data_frame.sort_values(by=['Number'], inplace = True)
        
        return data_frame
    
    def retrieve(self, sorted_lst):
        self.sorted_lst = sorted_lst
        
        min_student = sorted_lst.iloc[0]
        sorted_lst = sorted_lst.iloc[1:]
        
        return (min_student, sorted_lst)



class ManualData:
    '''
    
    '''
    
    def __init__(self):
        pass
    
    def entry(self):       
        x = input('Enter student name:\n')
        name_lst.append(x)
        
        x = int(input('Enter student number:\n'))
        while x > 99999999: 
            x = int(input('Re enter student number(Should be less than 8 digits):\n'))
        num_lst.append(x)
        
        x = input('Enter course code:\n')
        while len(x) > 7: 
            x = input('Re enter course code (Should be less than 7 characters):\n')
        course_lst.append(x)
        
        raw_data.append([num_lst[count], name_lst[count], course_lst[count]])
        
        return raw_data
    
    
def process():
    print(raw_student_list)
        
    student_data_table = CreateTable(raw_student_list)
    sorted_student_list = student_data_table.tabulate()
    print(sorted_student_list)

    minimum_student = student_data_table.retrieve(sorted_student_list)
    print(minimum_student)



while exit == False:
    choice = input('\n\n\nWhat would you like to do?(Select the corresponding number)\n1) Enter Student details manually.\n2) Process manual data.\n3) Generate random data.\nPress any other key to exit.\n\n')

    if choice == '1':
        student_data = ManualData()
        raw_student_list = student_data.entry()
        count += 1
        

    elif choice == '2':
        process()
        exit = True
        
        
    elif choice == '3':
        student_count = int(input('Enter the number of random student entries to be created:\n'))
        
        student_data = RandomData(student_count)
        raw_student_list = student_data.generator()
        process()
        exit = True
    
    
    else:
        print('Exiting..')
        exit = True
